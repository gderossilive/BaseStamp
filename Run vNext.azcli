az login

az account set --subscription 594cafab-484b-40b0-8336-f0a6042a8754 # Microsoft tenant
az account set --subscription 15f955b8-3425-4681-9277-e54e7f5c14b2 # GDRDEMO tenant


$Seed=(-join ((48..57) + (97..122) | Get-Random -Count 3 | % {[char]$_}))
$MyHomeIP="81.56.1.134"
$location='eastus'
$adminPassword=(-join ((48..59) + (63..91) + (99..123) | Get-Random -count 15 | % {[char]$_})) 
$MyObecjectId='172b999c-c842-4969-9202-542c4c358035' # MSFT
$MyObecjectId='f707a999-120a-4eae-932c-c07818410212' # GDRDEMO 

# Create the hub&spoke infrastructure
az deployment sub create `
     --name "MainDeploy-$Seed" `
     --location $location `
     --template-file 'Main.bicep' `
     --parameters `
          Parameters.json `
          adminPassword=$adminPassword `
          Seed=$Seed `
          DeployFirewall=True `
          DeployBastion=True `
          SpokesNumber=1 `
          DeployOnPrem=True `
          DeployProxy=True

# Clean up
az group delete --name "$Seed-Hub" --yes --no-wait
az group delete --name "$Seed-Spokes" --yes --no-wait
az group delete --name "$Seed-OnPrem" --yes --no-wait





$KVname='KV-nbcxf'
$NSGname='NSG-nbcxf'
$RulesetName='RS-k2mdk'

# Create 1 Windows VM and 1 Ubuntu VM on the OnPrem environment 
az deployment sub create `
     --name "OnPremDeploy" `
     --location 'westeurope' `
     --template-file VMsDeployment.bicep `
     --parameters `
        TargetRGname="$Seed-OnPrem" `
        TargetVnetName="OnPrem-VNet" `
        HubRGname="$Seed-Hub" `
        KVname=$KVname `
        adminPassword='adminPassword' 


# add the No-Internet rule to the OnPrem NSG
az network nsg rule create -g "$Seed-OnPrem" --nsg-name $NSGname -n 'NoInternet' --priority 1000 `
    --source-address-prefixes '*' --source-port-ranges '*' --direction Outbound `
    --destination-address-prefixes 'Internet' --destination-port-ranges 443 80 --access Deny `
    --protocol Tcp --description "Deny from specific IP address ranges on 80 and 443."

# add the No-Internet rule to the Spoke NSG
az network nsg rule create -g "$Seed-Spoke" --nsg-name $NSGname -n 'NoInternet' --priority 1000 `
    --source-address-prefixes '*' --source-port-ranges '*' --direction Outbound `
    --destination-address-prefixes 'Internet' --destination-port-ranges 443 80 --access Deny `
    --protocol Tcp --description "Deny from specific IP address ranges on 80 and 443."

# Install and configure the proxy with Squid (refer to Squid.sh)
az vm run-command invoke `
     -g "$Seed-Hub" `
     --name $ProxyName `
     --command-id RunShellScript `
     --scripts "sudo apt-get update && sudo apt-get install -y squid apache2-utils && sudo wget https://gdrcontent.z16.web.core.windows.net/whitelist.txt -O /etc/squid/whitelist.txt && sudo wget https://gdrcontent.z16.web.core.windows.net/squid.conf -O /etc/squid/squid.conf && sudo systemctl restart squid"

# Create Arc Infrastructure (AAPLS + Private DNS Zones)
az deployment sub create `
     --name="ArcDeploy" `
     --location 'westeurope' `
     --template-file AzureArc.bicep `
     --parameters `
        HubRGname="$Seed-Hub" `
        HubVnetName='Hub-VNet'  `
        RulesetName=$RulesetName




# ------------------------ END OF SCRIPT ---------------------------------------------------------


# To prepare the OnPrem VMs for Arc, refer to UbuntuConfig.sh + OnPremWinVM.ps1
$LinuxVMname=az deployment sub show --name "OnPremDeploy" --query properties.outputs.linuxVM.value
az vm run-command invoke `
     -g "$Seed-OnPrem" `
     --name $LinuxVMname `
     --command-id RunShellScript `
     --scripts "sudo service walinuxagent stop && sudo waagent -deprovision -force && sudo rm -rf /var/lib/waagent && sudo ufw --force enable && sudo ufw deny out from any to 169.254.169.254 && sudo ufw default allow incoming"

$WinVMname=az deployment sub show --name "OnPremDeploy" --query properties.outputs.winVM.value
az vm run-command invoke `
     -g "$Seed-OnPrem" `
     --name $WinVMname `
     --command-id RunPowerShellScript `
     --scripts 'Set-Service WindowsAzureGuestAgent -StartupType Disabled -Verbose; Stop-Service WindowsAzureGuestAgent -Force -Verbose; New-NetFirewallRule -Name BlockAzureIMDS -DisplayName "Block access to Azure IMDS" -Enabled True -Profile Any -Direction Outbound -Action Block -RemoteAddress 169.254.169.254'

# Create Arc Infrastructure (AAPLS + Private DNS Zones)
az deployment sub create `
     --name="ArcDeploy" `
     --location 'westeurope' `
     --template-file AzureArc.bicep `
     --parameters `
        HubRGname="$Seed-Hub" `
        HubVnetName='Hub-VNet'  `
        RulesetName=$RulesetName

# To Arc enable Windows VMs refer to ArcSetup.ps1
# To Arc enable Lunux VMs refer to ArcSetup.sh

# Create 1 Windows VM and 1 Ubuntu VM on the Spoke environment 
az deployment sub create `
     --name "SpokeDeploy" `
     --location 'westeurope' `
     --template-file SpokeMain.bicep `
     --parameters `
        SpokeRGname="$Seed-Spoke" `
        AzureRGname="$Seed-Hub" `
        KVname=$KVname `
        adminPassword='adminPassword' 

# ---------------------------- GuestConfiguration ---------------------------------------------------

# Deploy the guest configuration extension to the Spoke's VMs
$ResourceGroup = Get-AzResourceGroup -Name "$Seed-Spoke"
# Policy 385f5831-96d4-41db-9a3c-cd3af78aaae6
# | ?  { $_.Properties.DisplayName -match "Deploy the Windows Guest Configuration extension to enable Guest Configuration assignments on Windows VMs" }
$Definition = Get-AzPolicyDefinition -Name 385f5831-96d4-41db-9a3c-cd3af78aaae6 # Deploy the Windows Guest Configuration extension to enable Guest Configuration assignments on Windows VMs
$Assignment = New-AzPolicyAssignment -Name 'deployWinGuestExtension' -PolicyDefinition $Definition -Scope $ResourceGroup.ResourceId -Location 'westeurope' -IdentityType 'SystemAssigned'

Start-AzPolicyComplianceScan -ResourceGroupName "$Seed-Spoke"

# ---------------------------- END OF SCRIPT --------------------------------------------------------------------------
# ---------------------------- Monitoring Solutions Deployment---------------------------------------------------------


# Create the Log Analytics Infra (LA Workspace + AMPLS + Private DNS Zones)
az deployment sub create `
     --name="LANedeployFC" `
     --location $location `
     --template-file AzureLA.bicep `
     --parameters `
        AzureRGname="$Seed-Azure" `
        AzureVnetName=$AzureVNet
$LAWname=az deployment sub show --name "LANedeployFC" --query properties.outputs.laWname.value

# Deploy the VM Insights, Update Management, Change Tracking Solutions
az deployment sub create `
     --name 'SolutionsdeployFC' `
     --location $location `
     --template-file 'MonitoringSolutions.bicep' `
     --parameters `
          LaWorkspaceRGname="$Seed-Azure" `
          LaWorkspaceName=$LAWname

$VMlist='[\"'+$DNSname+'\",\"'+$ProxyName+'\"]'

# Define Data Collection Rules to send the security events to the LA Workspace
az deployment sub create `
     --name 'MaMDeployFC' `
     --location $location `
     --template-file 'VMsAzAgentsDeploy.bicep' `
     --parameters `
          VmRGname="$Seed-Azure" `
          WorkspaceRGname="$Seed-Azure" `
          WorkspaceName=$LAWname `
          VMlist=$VMlist